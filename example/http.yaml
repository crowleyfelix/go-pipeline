id: http-example
steps:
- id: control
  type: set
  params:
    url: 'https://swapi.bry.com.br/api/people?page=1'
    done: 'false'
    page: 1
- type: until
  params: 
    condition: '{{ variableGet . "control" "done" | eq "false" }}'
    steps:
    - type: log
      params:
        message: 'Extracting page {{ variableGet . "control" "url" }}'
    - id: http
      type: http
      params:
        method: GET
        url: '{{ variableGet . "control" "url" }}'
    - type: stop
      params:
        condition: '{{ ne (variable . "http").StatusCode 200 }}'
        message: 'Error on request {{ variable . "http" | toJson }}'
        is_error: true
    - id: extract
      type: set
      params:
        data: |
          {{ (variable . "http").Body | jsonPath "$.results[*]" | toJson }}
        count: '{{ (variable . "http").Body | jsonPath "$.results[*]" | len }}'
        next_url: '{{ (variable . "http").Body | jsonPath "$.next" | default "" }}'
    - type: log
      params:
        message: 'Extracted {{ variableGet . "extract" "count" }} items from page {{ variableGet . "control" "page" }}'
    - id: range
      type: range-json
      params:
        source: |
          {{ variableGet . "extract" "data" }}
        concurrency: 4
        steps:
        - type: log
          params:
            message: 'Person name -> {{ variable . "range" | toJson | jsonPath "$.name" }}'
    - id: control
      type: set
      params:
        url: '{{ variableGet . "extract" "next_url" }}'
        done: '{{ variableGet . "extract" "next_url" | eq "" }}'
        page: '{{ (variableGet . "control" "page") | add 1 }}'
    - type: wait
      params:
        duration: 1s
- type: log
  params:
    message: 'Execution finished successfully'